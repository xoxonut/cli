syntax = "proto3";
import "google/protobuf/empty.proto";
package twopcserver;
option go_package = "Twopc-cli/twopcserver;twopcserver";
service TwoPhaseCommitService {
    rpc CreateAccount(CreateAccountRequest) returns (Response);
    rpc DeleteAccount(DeleteAccountRequest) returns (Response);
    rpc ReadAccount(ReadAccountRequest) returns (Response);
    rpc UpdateAccount(UpdateAccountRequest) returns (Response);
    rpc BeginTransaction(BeginTransactionRequest) returns (Response);
    rpc Commit(CommitRequest) returns (Response);
    rpc Abort(AbortRequest) returns (Response);
    rpc Reset(google.protobuf.Empty) returns (Response);
}
// if operation successed err is false and msg is "successed"
// of err is true and msg is the cause
message Response {
    string msg = 1;
}
// if account has been created, fail
message CreateAccountRequest {
    int32 account_id = 2;
}
// if account does not exsist, fail
message DeleteAccountRequest {
    int32 account_id = 2;
}
// if account does not exsist, fail
message ReadAccountRequest {
    int32 account_id = 2;
}
// set account's balance to the amount and the amonunt must >= 0
// if account does not exsist, fail
message UpdateAccountRequest {
    int32 account_id = 2;
    int32 amount = 3;
}
//account balance must >= -amount
//if account does not exsist, fail
//if there is lock in 2pc, we must save locks in server
message BeginTransactionRequest {
    int32 account_id = 2;
    int32 amount = 3;
}
// do the saved operation and released locked account
message CommitRequest {
    int32 account_id = 2;
    int32 amount = 3;
}
//do nothing but released locked accoount
message AbortRequest {
    int32 account_id = 2;
}